// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  firstName String     @db.VarChar(255)
  lastName  String     @db.VarChar(255)
  email     String     @unique @db.VarChar(255)
  password  String     @db.VarChar(60)
  role      UserRole   @default(CUSTOMER)
  userToken UserToken?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Order     Order?

  @@map("users")
}

model UserToken {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  token     String   @unique
  createdAt DateTime @default(now())

  @@map("user_tokens")
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  price     Float
  stock     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Order {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int         @unique
  total      Float
  address    String      @db.VarChar(500)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  quantity    Int
  price       Float
  productName String   @db.VarChar(255)
  order       Order    @relation(fields: [orderId], references: [id])
  orderId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("order_items")
}

enum UserRole {
  ADMIN
  CUSTOMER
}
